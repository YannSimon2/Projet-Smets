import numpy as np

import matplotlib.pyplot as plt

# Parameters
a = 1.0           # Advection speed
L = 1.0           # Domain length
Nx = 100          # Number of spatial points
dx = L / Nx       # Spatial step
CFL = 0.8         # CFL number
dt = CFL * dx / abs(a)  # Time step
T = 0.5           # Final time
Nt = int(T / dt)  # Number of time steps

# Grid
x = np.linspace(0, L, Nx, endpoint=False)

# Initial condition: square pulse
u0 = np.where((x >= 0.2) & (x <= 0.4), 1.0, 0.0)
u = u0.copy()

def roe_flux(uL, uR, a):
    """Roe flux for linear advection."""
    return 0.5 * a * (uL + uR) - 0.5 * abs(a) * (uR - uL)

# Time integration
for n in range(Nt):
    u_ext = np.hstack([u[-1], u, u[0]])  # Periodic BC
    fluxes = np.array([roe_flux(u_ext[i], u_ext[i+1], a) for i in range(Nx+1)])
    u -= dt/dx * (fluxes[1:] - fluxes[:-1])

# Plot
plt.plot(x, u0, label='Initial')
plt.plot(x, u, label='Numerical')
plt.xlabel('x')
plt.ylabel('u')
plt.legend()
plt.title('Linear Advection (Roe First Order Upwind)')
plt.show()